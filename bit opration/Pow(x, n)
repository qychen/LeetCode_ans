class Solution(object):
    def myPow(self, x, n):
        """
        :type x: float
        :type n: int
        :rtype: float
        """
        
        if n < 0:
            m = -n
        else:
            m = n
        
        pow2 = []
        pow2.append(x)
        length = len(bin(m)[2:])
        for i in range(1,length):
            pow2.append(pow2[-1]*pow2[-1])
        res = 1.0
        for i in range(length):
            if m & 1<<i:
                res *= pow2[i]
        if n > 0:
            return res
        else:
            return 1.0/res