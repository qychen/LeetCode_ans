# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def rotateRight(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """
        if not head:
            return None
        if k == 0:
            return head
        kk = k
        start = head
        end = head
        while k:
            if end.next:
                end = end.next
            else:
                length = kk - k + 1
                k = (k-1)%length+1
                end = head
            k -= 1
        #print type(head), head.val, type(end), k
        while end.next:
            start = start.next
            end = end.next
        end.next = head
        head = start.next
        start.next = None
        return head