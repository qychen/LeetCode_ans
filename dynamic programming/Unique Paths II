class Solution(object):
    def uniquePathsWithObstacles(self, obstacleGrid):
        """
        :type obstacleGrid: List[List[int]]
        :rtype: int
        """
        if obstacleGrid[0][0] == 1:
            return 0
        m = len(obstacleGrid)
        n = len(obstacleGrid[0])
        count = [[0 for x in range(n)] for x in range(m)] 
        count[0][0] = 1
        for i in range(1,n):
            if obstacleGrid[0][i] == 0:
                count[0][i] = 1
            else:
                break
        for i in range(1,m):
            if obstacleGrid[i][0] == 0:
                count[i][0] = 1
            else:
                break
        for i in range(1,m):
            for j in range(1,n):
                if obstacleGrid[i][j] == 0:
                    count[i][j] = count[i][j-1] + count[i-1][j]
                else:
                    count[i][j] = 0
        return count[-1][-1]
        